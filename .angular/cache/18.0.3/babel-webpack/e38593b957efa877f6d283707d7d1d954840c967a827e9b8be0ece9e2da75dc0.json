{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomePage = class HomePage {\n  constructor(geolocation, restaurantService) {\n    this.geolocation = geolocation;\n    this.restaurantService = restaurantService;\n    this.restaurants = [];\n    this.allRestaurants = [];\n    this.limit = 10;\n    this.skip = 0;\n    this.latitude = 0;\n    this.longitude = 0;\n  }\n  ngOnInit() {\n    this.geolocation.getCurrentPosition().then(resp => {\n      this.latitude = resp.coords.latitude;\n      this.longitude = resp.coords.longitude;\n      this.loadRestaurants();\n    }).catch(error => {\n      console.log('Error getting location', error);\n    });\n  }\n  loadRestaurants(event) {\n    if (this.latitude !== undefined && this.longitude !== undefined) {\n      this.restaurantService.getRestaurants(this.latitude, this.longitude, this.limit, this.skip).subscribe(data => {\n        this.restaurants = this.restaurants.concat(data.response);\n        this.restaurants.forEach(restaurant => {\n          restaurant.distance = this.calculateDistanceInKilometers(this.latitude, this.longitude, restaurant.storeInfo.geoLocation.latitude, restaurant.storeInfo.geoLocation.longitude);\n        });\n        this.allRestaurants = this.restaurants;\n        if (event) {\n          event.target.complete();\n        }\n        this.skip += this.limit;\n      });\n    }\n  }\n  loadMore(event) {\n    this.loadRestaurants(event);\n  }\n  filterRestaurants(event) {\n    const searchTerm = event.target.value.toLowerCase();\n    if (searchTerm) {\n      this.restaurants = this.allRestaurants.filter(restaurant => {\n        return restaurant.title.toLowerCase().includes(searchTerm) || restaurant.text.toLowerCase().includes(searchTerm);\n      });\n    } else {\n      this.restaurants = this.allRestaurants;\n    }\n  }\n  calculateDistanceInKilometers(lat1, long1, lat2, long2) {\n    let EARTH_RADIUS_KM = 6371; // Dünya'nın kilometre olarak yarıçapı\n    let distance = Math.sqrt(Math.pow(lat2 - lat1, 2) + Math.pow(long2 - long1, 2));\n    let distanceInKm = distance * (Math.PI / 180) * EARTH_RADIUS_KM; //işletme konumu ile kullanıcının konumu arasındaki mesafe hesaplanır\n    return Number(distanceInKm.toFixed(2)); // Sonucu ondalıklı sayı  formatına döner örn: 1.149875646 değerini  1.15  km olarak \n  }\n};\nHomePage = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss']\n})], HomePage);\nexport { HomePage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}