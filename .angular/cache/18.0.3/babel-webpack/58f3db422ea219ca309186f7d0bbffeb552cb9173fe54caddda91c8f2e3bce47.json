{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomePage = class HomePage {\n  constructor(geolocation, restaurantService) {\n    this.geolocation = geolocation;\n    this.restaurantService = restaurantService;\n    this.restaurants = [];\n    this.limit = 10;\n    this.skip = 0;\n  }\n  ngOnInit() {\n    this.geolocation.getCurrentPosition().then(resp => {\n      this.latitude = resp.coords.latitude;\n      this.longitude = resp.coords.longitude;\n      this.loadRestaurants();\n    }).catch(error => {\n      console.log('Error getting location', error);\n    });\n  }\n  loadRestaurants(event) {\n    this.restaurantService.getRestaurants(this.latitude, this.longitude, this.limit, this.skip).subscribe(data => {\n      this.restaurants = this.restaurants.concat(data.restaurants); // API'den dönen veriye uygun şekilde ayarlayın\n      if (event) {\n        event.target.complete();\n      }\n      this.skip += this.limit;\n    });\n  }\n  loadMore(event) {\n    this.loadRestaurants(event);\n  }\n};\nHomePage = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss']\n})], HomePage);\nexport { HomePage };","map":{"version":3,"names":["Component","HomePage","constructor","geolocation","restaurantService","restaurants","limit","skip","ngOnInit","getCurrentPosition","then","resp","latitude","coords","longitude","loadRestaurants","catch","error","console","log","event","getRestaurants","subscribe","data","concat","target","complete","loadMore","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Mehmet\\kerzz-demo\\src\\app\\home\\home.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { RestaurantService } from '../services/restaurant.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit {\n\n  restaurants: any[] = [];\n  limit: number = 10;\n  skip: number = 0;\n  latitude: number;\n  longitude: number;\n\n  constructor(private geolocation: Geolocation, private restaurantService: RestaurantService) {}\n\n  ngOnInit() {\n    this.geolocation.getCurrentPosition().then((resp) => {\n      this.latitude = resp.coords.latitude;\n      this.longitude = resp.coords.longitude;\n      this.loadRestaurants();\n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n  }\n\n  loadRestaurants(event?) {\n    this.restaurantService.getRestaurants(this.latitude, this.longitude, this.limit, this.skip).subscribe((data) => {\n      this.restaurants = this.restaurants.concat(data.restaurants); // API'den dönen veriye uygun şekilde ayarlayın\n      if (event) {\n        event.target.complete();\n      }\n      this.skip += this.limit;\n    });\n  }\n\n  loadMore(event) {\n    this.loadRestaurants(event);\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,QAAQ,GAAd,MAAMA,QAAQ;EAQnBC,YAAoBC,WAAwB,EAAUC,iBAAoC;IAAtE,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,iBAAiB,GAAjBA,iBAAiB;IANvE,KAAAC,WAAW,GAAU,EAAE;IACvB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,IAAI,GAAW,CAAC;EAI6E;EAE7FC,QAAQA,CAAA;IACN,IAAI,CAACL,WAAW,CAACM,kBAAkB,EAAE,CAACC,IAAI,CAAEC,IAAI,IAAI;MAClD,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACE,MAAM,CAACD,QAAQ;MACpC,IAAI,CAACE,SAAS,GAAGH,IAAI,CAACE,MAAM,CAACC,SAAS;MACtC,IAAI,CAACC,eAAe,EAAE;IACxB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAI;MACjBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;IAC9C,CAAC,CAAC;EACJ;EAEAF,eAAeA,CAACK,KAAM;IACpB,IAAI,CAAChB,iBAAiB,CAACiB,cAAc,CAAC,IAAI,CAACT,QAAQ,EAAE,IAAI,CAACE,SAAS,EAAE,IAAI,CAACR,KAAK,EAAE,IAAI,CAACC,IAAI,CAAC,CAACe,SAAS,CAAEC,IAAI,IAAI;MAC7G,IAAI,CAAClB,WAAW,GAAG,IAAI,CAACA,WAAW,CAACmB,MAAM,CAACD,IAAI,CAAClB,WAAW,CAAC,CAAC,CAAC;MAC9D,IAAIe,KAAK,EAAE;QACTA,KAAK,CAACK,MAAM,CAACC,QAAQ,EAAE;MACzB;MACA,IAAI,CAACnB,IAAI,IAAI,IAAI,CAACD,KAAK;IACzB,CAAC,CAAC;EACJ;EAEAqB,QAAQA,CAACP,KAAK;IACZ,IAAI,CAACL,eAAe,CAACK,KAAK,CAAC;EAC7B;CAED;AAlCYnB,QAAQ,GAAA2B,UAAA,EALpB5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,gBAAgB;EAC7BC,SAAS,EAAE,CAAC,gBAAgB;CAC7B,CAAC,C,EACW9B,QAAQ,CAkCpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}